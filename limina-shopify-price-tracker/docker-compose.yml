version: '3.8'

services:
  # PostgreSQL database for testing
  postgres:
    image: postgres:15
    container_name: limina-test-db
    environment:
      POSTGRES_DB: limina_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-db.sql:/docker-entrypoint-initdb.d/01-init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Supabase local development stack
  supabase:
    image: supabase/supabase:latest
    container_name: limina-supabase
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_DB: limina_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      JWT_SECRET: your-super-secret-jwt-token-with-at-least-32-characters
      ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0
      SERVICE_ROLE_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU
    ports:
      - "8000:8000"
    volumes:
      - ./docker/supabase-config:/app/supabase
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MailHog for email testing (catches all emails)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: limina-mailhog
    ports:
      - "1025:1025"  # SMTP server
      - "8025:8025"  # Web UI
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "1025"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis for caching (optional but good for production simulation)
  redis:
    image: redis:7-alpine
    container_name: limina-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Main Next.js application
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: limina-app
    depends_on:
      postgres:
        condition: service_healthy
      mailhog:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      # Database
      NEXT_PUBLIC_SUPABASE_URL: http://localhost:8000
      NEXT_PUBLIC_SUPABASE_ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0
      SUPABASE_SERVICE_ROLE_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU
      
      # Email (using MailHog)
      RESEND_API_KEY: test_key
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
      
      # App config
      NEXT_PUBLIC_APP_URL: http://localhost:3000
      SHOPIFY_WEBHOOK_SECRET: test_webhook_secret_docker
      NODE_ENV: development
      
      # Redis
      REDIS_URL: redis://redis:6379
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - node_modules:/app/node_modules
    working_dir: /app
    command: npm run dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Test runner service
  test-runner:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: limina-test-runner
    depends_on:
      postgres:
        condition: service_healthy
      mailhog:
        condition: service_healthy
    environment:
      # Test database connection
      NEXT_PUBLIC_SUPABASE_URL: http://supabase:8000
      SUPABASE_SERVICE_ROLE_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU
      
      # Test email
      RESEND_API_KEY: test_key
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
      
      # Test config
      SHOPIFY_WEBHOOK_SECRET: test_webhook_secret_docker
      NODE_ENV: test
    volumes:
      - .:/app
      - node_modules:/app/node_modules
    working_dir: /app
    profiles:
      - test
    command: npm test

  # Demo data seeder
  demo-seeder:
    build:
      context: .
      dockerfile: Dockerfile.demo
    container_name: limina-demo-seeder
    depends_on:
      app:
        condition: service_healthy
    environment:
      APP_URL: http://app:3000
      DEMO_SHOP_DOMAIN: demo-electronics.myshopify.com
    volumes:
      - .:/app
    working_dir: /app
    profiles:
      - demo
    command: node scripts/seed-demo-data.js

volumes:
  postgres_data:
  redis_data:
  node_modules: